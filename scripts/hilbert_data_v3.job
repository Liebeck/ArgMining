#!/bin/bash

###########################
##                        #
##   The PBS directives   #
##                        #
###########################

# Set the name of the job
#PBS -N ArgMining

# Specify the maximum wall clock time. The wall
# clock time should take possible queue waiting time into
# account.  Format:   hhhh:mm:ss   hours:minutes:seconds
# Be sure to specify a reasonable value here.
# If the job does not finish by the time reached,
# the job is terminated.
#PBS -l walltime=70:00:00

# Send mail when job is aborted
#PBS -m abe
#PBS -M liebeck@cs.uni-duesseldorf.de

# Manage resources
#PBS -l select=1:mem=5gb:ncpus=1

#PBS -A OP-NLP


##########################################
#                                        #
#   Output some useful job information.  #
#                                        #
##########################################
echo ------------------------------------------------------
echo -n 'Job is running on node '; cat $PBS_NODEFILE
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------


# Set parameters for the Python script if the values are passed as parameters to the bash script

if [ -n "${fasttext_path}" ]; then
    fasttext='-fasttext_path '${fasttext_path}
fi


if [ -n "${embeddings_path}" ]; then
    embedding='-embeddings_path '${embeddings_path}
fi

if [ -n "${lda_path}" ]; then
    lda='-lda_path '${lda_path}' -lda_vocab_path '${lda_vocab_path}
fi

module load Python/3.4.5
module load spaCy/1.9.0


# Exports
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/malie102/lib
export PYTHONPATH=$PYTHONPATH:/scratch_gs/malie102/jobs/ArgMining

PRINTFILE=$PBS_O_WORKDIR/$PBS_JOBID".print"

###### EXECUTION ######
python -u /scratch_gs/malie102/jobs/ArgMining/scripts/sentence/gridsearch.py -c $c -subtask $subtask ${embedding} ${lda} ${fasttext} -gridsearchstrategy $gridsearchstrategy --data_version v3 -nfold 10 -hilbert >> $PRINTFILE